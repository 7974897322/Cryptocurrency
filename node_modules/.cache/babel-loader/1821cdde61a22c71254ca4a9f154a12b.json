{"ast":null,"code":"var _jsxFileName = \"/home/sameer/Documents/react-crypto-tracker/src/Pages/pricePage.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction pricePage() {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [price, setPrice] = React.useState(\"40000\");\n  const [, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n  const [commission, setCommission] = useState(\"\");\n  const [focusedInput, setFocus] = useState(null); //run an effect when price, count, or amount changes\n\n  useEffect(() => {\n    if (price && count && focusedInput !== 'amount') {\n      setAmount(price * count);\n    } else if (price && count && focusedInput !== 'count') {\n      setCount(amount / price);\n    }\n  }, [price, count, amount, focusedInput]); //when amount changes, update total\n\n  useEffect(() => {\n    if (isNaN(amount)) setCommission('');\n    if (amount) setCommission(amount * 0.002);\n  }, [amount]);\n\n  const changeHandler = e => {\n    const {\n      value\n    } = e.target;\n\n    if (value.endsWith(\"40000\")) {\n      const modValue = value.replace(\"40000\", \"\");\n      setPrice(modValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"coin name\",\n      onChangeText: setName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: price,\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"number of coins\",\n      onChangeText: text => setCount(parseFloat(text)),\n      keyboardType: \"decimal-pad\",\n      value: count.toString(),\n      onFocus: () => setFocus(\"count\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Amount Invested\",\n      onChangeText: text => setAmount(parseFloat(text)),\n      keyboardType: \"decimal-pad\",\n      value: amount.toString(),\n      onFocus: () => setFocus(\"amount\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"coin price\",\n      onChangeText: text => setPrice(parseFloat(text)),\n      keyboardType: \"decimal-pad\",\n      value: price.toString(),\n      onFocus: () => setFocus(\"price\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: [\"Commission: \", commission]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: [\"Total Amount: \", commission + amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(pricePage, \"6No6G5jzgw0k+URK9Ihyrofz8oA=\");\n\nexport default pricePage;","map":{"version":3,"sources":["/home/sameer/Documents/react-crypto-tracker/src/Pages/pricePage.js"],"names":["React","useState","useEffect","pricePage","price","setPrice","setName","amount","setAmount","count","setCount","commission","setCommission","focusedInput","setFocus","isNaN","changeHandler","e","value","target","endsWith","modValue","replace","text","parseFloat","toString"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect } from \"react\";\n\nfunction pricePage() {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [price, setPrice] = React.useState(\"40000\");\n  const [, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n  const [commission, setCommission] = useState(\"\");\n  const [ focusedInput, setFocus ] = useState(null)\n\n\n//run an effect when price, count, or amount changes\nuseEffect(()=>{\n  if(price && count && focusedInput !== 'amount'){\n    setAmount( price * count )\n  }\n  else if(price && count && focusedInput !== 'count'){\n    setCount(amount/price)\n  }\n},[price, count, amount, focusedInput])\n\n//when amount changes, update total\n\nuseEffect(()=>{\n  if(isNaN(amount))\n  setCommission('')\n  if(amount)\n  setCommission( amount*0.002 );\n},[amount])\n\n  const changeHandler = (e) => {\n    const { value } = e.target;\n    if (value.endsWith(\"40000\")) {\n      const modValue = value.replace(\"40000\", \"\");\n      setPrice(modValue);\n    }\n  };\n\n  return (\n    <div>\n\n      <input\n      placeholder=\"coin name\"\n      onChangeText={setName}\n       />\n\n        <input\n        type=\"text\"\n        value={price}\n        onChange={changeHandler}\n      />\n\n      <input\n      placeholder=\"number of coins\"\n      onChangeText={text => setCount(parseFloat(text))}\n      keyboardType=\"decimal-pad\"\n      value={count.toString()}\n      onFocus={()=>setFocus(\"count\")}\n       />\n\n      <input\n      placeholder=\"Amount Invested\"\n      onChangeText={text => setAmount(parseFloat(text))}\n     keyboardType=\"decimal-pad\"\n     value={amount.toString()}\n     onFocus={()=>setFocus(\"amount\")}\n       />\n     \n     <input\n      placeholder=\"coin price\"\n      onChangeText={text=>setPrice(parseFloat(text))}\n      keyboardType=\"decimal-pad\"\n      value={price.toString()}\n       onFocus={()=>setFocus(\"price\")}\n       />\n\n      <text>Commission: {commission}</text>\n      <text>Total Amount: {commission +amount}</text>\n    </div>\n  );\n}\n\nexport default pricePage;"]},"metadata":{},"sourceType":"module"}