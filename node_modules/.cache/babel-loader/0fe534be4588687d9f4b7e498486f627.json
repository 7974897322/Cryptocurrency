{"ast":null,"code":"var _jsxFileName = \"/home/sameer/Documents/react-crypto-tracker/src/Pages/pricePage.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction pricePage() {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [price, setPrice] = React.useState(\"40000\");\n  const [, setName] = useState(\"\"); // const [amount, setAmount] = useState(\"\");\n  // const [count, setCount] = useState(\"\");\n  // const [commission, setCommission] = useState(\"\");\n  // const [ focusedInput, setFocus ] = useState(null)\n\n  const [state, setState] = useState({\n    amount: 0,\n    commission: 0,\n    count: 0\n  }); //run an effect when price, count, or amount changes\n  // useEffect(()=>{\n  //   if(price && count && focusedInput !== 'amount'){\n  //     setAmount( price * count )\n  //   }\n  //   else if(price && count && focusedInput !== 'count'){\n  //     setCount(amount/price)\n  //   }\n  // },[price, count, amount, focusedInput])\n  //when amount changes, update total\n  // useEffect(()=>{\n  //   if(isNaN(amount))\n  //   setCommission('')\n  //   if(amount)\n  //   setCommission( amount*0.002 );\n  // },[amount])\n\n  updateDetails = (text, type) => {\n    console.log(\"came to update Details...\");\n\n    if (type == \"count\") {\n      setState({ ...state,\n        count: text\n      });\n    }\n\n    if (type === \"price\") {\n      console.log(\"came inside price\");\n      const price = parseFloat(text);\n      setState({ ...state,\n        price: price,\n        amount: price * state.count,\n        commission: state.price * state.count * 0.002\n      });\n      console.log(\"price:\" + price);\n      console.log(state.amount);\n      console.log(state.commission);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"coin name\",\n      onChangeText: text => setName(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: price,\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"number of coins\",\n      onChangeText: text => updateDetails(text, \"count\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Amount Invested\",\n      value: state.amount,\n      onChangeText: text => updateDetails(text, \"amount\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"coin price\",\n      onChangeText: text => updateDetails(text, \"price\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: [\"Commission: \", state.commission]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: [\"Total Amount: \", state.commission + state.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(pricePage, \"bU+P1HAlPHDCWOULdkks7FlXYpI=\");\n\nexport default pricePage;","map":{"version":3,"sources":["/home/sameer/Documents/react-crypto-tracker/src/Pages/pricePage.js"],"names":["React","useState","useEffect","pricePage","price","setPrice","setName","state","setState","amount","commission","count","updateDetails","text","type","console","log","parseFloat","changeHandler"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect } from \"react\";\n\nfunction pricePage() {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [price, setPrice] = React.useState(\"40000\");\n  const [, setName] = useState(\"\");\n  // const [amount, setAmount] = useState(\"\");\n  // const [count, setCount] = useState(\"\");\n  // const [commission, setCommission] = useState(\"\");\n  // const [ focusedInput, setFocus ] = useState(null)\n  const [state, setState ] = useState({\n    amount: 0,\n    commission: 0,\n    count: 0,\n  })\n\n\n//run an effect when price, count, or amount changes\n// useEffect(()=>{\n//   if(price && count && focusedInput !== 'amount'){\n//     setAmount( price * count )\n//   }\n//   else if(price && count && focusedInput !== 'count'){\n//     setCount(amount/price)\n//   }\n// },[price, count, amount, focusedInput])\n\n//when amount changes, update total\n\n// useEffect(()=>{\n//   if(isNaN(amount))\n//   setCommission('')\n//   if(amount)\n//   setCommission( amount*0.002 );\n// },[amount])\n\nupdateDetails = (text, type) => {\n  console.log(\"came to update Details...\");\n  if (type == \"count\") {\n    setState({\n      ...state,\n      count: text,\n    });\n  }\n  if (type === \"price\") {\n    console.log(\"came inside price\");\n    const price = parseFloat(text);\n    setState({\n      ...state,\n      price: price,\n      amount: price * state.count,\n      commission: state.price * state.count * 0.002,\n    });\n   \n    console.log(\"price:\" + price);\n    console.log(state.amount);\n    console.log(state.commission);\n  }\n};\n  return (\n    <div>\n\n      <input\n      placeholder=\"coin name\"\n      onChangeText={(text) => setName(text)}\n       />\n\n        <input\n        type=\"text\"\n        value={price}\n        onChange={changeHandler}\n      />\n\n      {/* <input\n      placeholder=\"number of coins\"\n      onChangeText={text => setCount(parseFloat(text))}\n      keyboardType=\"decimal-pad\"\n      value={count.toString()}\n      onFocus={()=>setFocus(\"count\")}\n       /> */}\n\n       <input\n              placeholder=\"number of coins\"\n              onChangeText={(text) => updateDetails(text, \"count\")}\n            />\n\n      {/* <input\n      placeholder=\"Amount Invested\"\n      onChangeText={text => setAmount(parseFloat(text))}\n     keyboardType=\"decimal-pad\"\n     value={amount.toString()}\n     onFocus={()=>setFocus(\"amount\")}\n       /> */}\n       <input\n              placeholder=\"Amount Invested\"\n              value={state.amount}\n              onChangeText={(text) => updateDetails(text, \"amount\")}\n            />\n\n     \n     {/* <input\n      placeholder=\"coin price\"\n      onChangeText={text=>setPrice(parseFloat(text))}\n      keyboardType=\"decimal-pad\"\n      value={price.toString()}\n       onFocus={()=>setFocus(\"price\")}\n       /> */}\n       <input\n              placeholder=\"coin price\"\n              onChangeText={(text) => updateDetails(text, \"price\")}\n            />\n\n      {/* <text>Commission: {commission}</text>\n      <text>Total Amount: {commission +amount}</text> */}\n      <text>Commission: {state.commission}</text>\n        <text>Total Amount: {state.commission + state.amount}</text>\n    </div>\n  );\n}\n\nexport default pricePage;"]},"metadata":{},"sourceType":"module"}