{"ast":null,"code":"import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport Theme, { ThemeShape } from './Theme';\nimport normalizeStyle from './StyleNormalizer/normalizeStyle';\n/**\n *  Provides a theme to child components trough context.\n */\n\nexport default class StyleProvider extends React.Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    style: {}\n  };\n  static childContextTypes = {\n    theme: ThemeShape.isRequired\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: this.createTheme(props)\n    };\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.style !== this.props.style) {\n      this.setState({\n        theme: this.createTheme(nextProps)\n      });\n    }\n  }\n\n  createTheme(props) {\n    return new Theme(props.style);\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return Children.only(children);\n  }\n\n}","map":{"version":3,"sources":["/home/sameer/Documents/react-crypto-tracker/node_modules/native-base-shoutem-theme/src/StyleProvider.js"],"names":["React","Children","PropTypes","Theme","ThemeShape","normalizeStyle","StyleProvider","Component","propTypes","children","element","isRequired","style","object","defaultProps","childContextTypes","theme","constructor","props","context","state","createTheme","getChildContext","componentWillReceiveProps","nextProps","setState","render","only"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,SAAlC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA;AACA;AACA;;AACA,eAAe,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AACzC,SAATC,SAAS,GAAG;AACjBC,IAAAA,QAAQ,EAAEP,SAAS,CAACQ,OAAV,CAAkBC,UADX;AAEjBC,IAAAA,KAAK,EAAEV,SAAS,CAACW;AAFA,GAAH;AAKG,SAAZC,YAAY,GAAG;AACpBF,IAAAA,KAAK,EAAE;AADa,GAAH;AAIK,SAAjBG,iBAAiB,GAAG;AACzBC,IAAAA,KAAK,EAAEZ,UAAU,CAACO;AADO,GAAH;;AAIxBM,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,KAAKK,WAAL,CAAiBH,KAAjB;AADI,KAAb;AAGD;;AAEDI,EAAAA,eAAe,GAAG;AAChB,WAAO;AACLN,MAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ;AADb,KAAP;AAGD;;AAEDO,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACZ,KAAV,KAAoB,KAAKM,KAAL,CAAWN,KAAnC,EAA0C;AACxC,WAAKa,QAAL,CAAc;AACZT,QAAAA,KAAK,EAAE,KAAKK,WAAL,CAAiBG,SAAjB;AADK,OAAd;AAGD;AACF;;AAEDH,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,WAAO,IAAIf,KAAJ,CAAUe,KAAK,CAACN,KAAhB,CAAP;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA;AAAF,QAAe,KAAKS,KAA1B;AAEA,WAAOjB,QAAQ,CAAC0B,IAAT,CAAclB,QAAd,CAAP;AACD;;AA3CwD","sourcesContent":["import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport Theme, { ThemeShape } from './Theme';\nimport normalizeStyle from './StyleNormalizer/normalizeStyle';\n\n/**\n *  Provides a theme to child components trough context.\n */\nexport default class StyleProvider extends React.Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    style: {},\n  };\n\n  static childContextTypes = {\n    theme: ThemeShape.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: this.createTheme(props),\n    };\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.style !== this.props.style) {\n      this.setState({\n        theme: this.createTheme(nextProps),\n      });\n    }\n  }\n\n  createTheme(props) {\n    return new Theme(props.style);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return Children.only(children);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}